#
# CORE
# Copyright (c)2010-2011 the Boeing Company.
# See the LICENSE file included in this distribution.
#
''' Sample user-defined service.
'''

import os

from core.service import CoreService, addservice
#from core.misc.ipaddr import IPv4Prefix, IPv6Prefix

cmdResult1 = []

class Demander(CoreService):
    ''' This is a sample user-defined service. 
    '''
    # a unique name is required, without spaces
    _name = "Demander"
    # you can create your own group here
    _group = "Energy services"
    # list of other services this service depends on
    _depends = ()
    # per-node directories
    _dirs = ()
    # generated files (without a full path this file goes in the node's dir,
    #  e.g. /tmp/pycore.12345/n1.conf/)
    _configs = ('Demander.sh', )
    # this controls the starting order vs other enabled services
    _startindex = 65
    # list of startup commands, also may be generated during startup
    _startup = ("/usr/lib/EnergyDaemon/demander ",)
    # list of shutdown commands
    _shutdown = ()

    @classmethod
    def generateconfig(cls, node, filename, services):
       
        cfg = "#!/bin/sh\n"
        cfg += "# auto-generated by Demander\n"
        return cfg

    @classmethod
    def getstartup(cls,  node,  services):
      #  global cmd1
      #  cmd1 = cls._startup[0:]       
      #  cmd1 += node.name
      #  return (cmd1)
        global cmdResult1
        cmdResult1=[]
        cmdResult1.append(cls._startup[0] + node.name)
        return (cmdResult1)
        #return cls._startup


# this line is required to add the above class to the list of available services
addservice(Demander)

